--Retrieve all distinct content types available on Netflix.
SELECT DISTINCT CONTENT_TYPE AS UNIQUE_CONTENT FROM NETFLIX_; 

--Count the total number of movies and TV shows separately.
SELECT CONTENT_TYPE, COUNT(*) AS CONTENT_TYPE_COUNT FROM NETFLIX_ GROUP BY 1; 

--Find the top 5 countries with the most content available on Netflix.
WITH CountryOccurrences AS (
    SELECT 
        TRIM(unnest(string_to_array(country, ','))) AS country 
    FROM 
        netflix_
    WHERE 
        country IS NOT NULL
)

    SELECT 
        country, 
        COUNT(*) AS content_count
    FROM 
        CountryOccurrences
    GROUP BY 
        country
	ORDER BY 
    content_count DESC	
	LIMIT 5; 
	
--Identify the most common content rating in the dataset.
SELECT RATING, COUNT(*) AS RATING_COUNT 
FROM NETFLIX_ 
GROUP BY 1 
ORDER BY 2 DESC 
LIMIT 1; 

--List all movies that were added to Netflix in 2021.
SELECT *
FROM 
	(SELECT TITLE, CAST(RIGHT(DATE_ADDED, 4) AS INT) AS YEAR_ADDED 
	 FROM NETFLIX_)
WHERE YEAR_ADDED=2021; 

--Determine the average number of seasons for TV shows on Netflix.
SELECT ROUND(AVG(CAST(LEFT(DURATION, 1) AS DECIMAL)), 1) AS AVG_NUM_OF_SEASONS
FROM NETFLIX_
WHERE UPPER(CONTENT_TYPE) = 'TV SHOW';

--Find the top 3 directors with the most content on Netflix.
WITH DIRECTOR_OCCURRENCES AS (
    SELECT 
        TRIM(unnest(string_to_array(DIRECTOR, ','))) AS DIRECTOR 
    FROM 
        netflix_
    WHERE 
        DIRECTOR IS NOT NULL
)

    SELECT 
        DIRECTOR, 
        COUNT(*) AS content_count
    FROM 
        DIRECTOR_OCCURRENCES
    GROUP BY 
        1
	ORDER BY 
    2 DESC	
	LIMIT 3; 
	
--Count how many titles were released each year, sort by year in descending order.
SELECT RELEASE_YEAR, COUNT(*) AS RELEASE_YR_COUNT 
FROM NETFLIX_ 
GROUP BY 1 
ORDER BY 1 DESC; 

--Find all content that includes the actor Leonardo DiCaprio 
SELECT TITLE 
FROM NETFLIX_ 
WHERE UPPER(CASTS) LIKE '%LEONARDO DICAPRIO%'; 

--Calculate the percentage of content that is a movie versus a TV show.
SELECT ROUND((TOTAL_MOVIES/TOTAL_CONTENT)*100, 1) AS MOVIE_PCT, ROUND((TOTAL_TV/TOTAL_CONTENT)*100, 1) AS TV_PCT
FROM
    (SELECT 
        CAST(COUNT(*) AS DECIMAL) AS TOTAL_CONTENT,
        CAST(SUM(CASE WHEN UPPER(CONTENT_TYPE)='MOVIE' THEN 1 ELSE 0 END) AS DECIMAL) AS TOTAL_MOVIES,
        CAST(SUM(CASE WHEN UPPER(CONTENT_TYPE)='TV SHOW' THEN 1 ELSE 0 END) AS DECIMAL) AS TOTAL_TV
    FROM NETFLIX_);
					
--Identify titles with the longest duration for movies and the highest number of seasons for TV shows.
WITH LONGESTMOVIE AS (
	SELECT TITLE, CAST(LEFT(DURATION, POSITION(' ' IN DURATION) - 1) AS DECIMAL) AS MOVIE_DURATION
	FROM NETFLIX_
	WHERE UPPER(CONTENT_TYPE)='MOVIE' AND DURATION IS NOT NULL
	ORDER BY 2 DESC
	LIMIT 1), 
    LONGESTTV AS (
	SELECT TITLE, CAST(LEFT(DURATION, POSITION(' ' IN DURATION) - 1) AS DECIMAL) AS TV_DURATION
	FROM NETFLIX_
	WHERE UPPER(CONTENT_TYPE)='TV SHOW' AND DURATION IS NOT NULL
	ORDER BY 2 DESC
	LIMIT 1) 
SELECT * FROM LONGESTMOVIE 
UNION ALL 
SELECT * FROM LONGESTTV; 

--Find the country with the highest number of TV shows with a "TV-MA" rating.
SELECT TRIM(UNNEST(STRING_TO_ARRAY(COUNTRY, ','))) AS COUNTRY, COUNT(*) AS RATING_COUNT
FROM(
	SELECT COUNTRY 
	FROM NETFLIX_ 
	WHERE UPPER(RATING) = 'TV-MA' AND COUNTRY IS NOT NULL)
GROUP BY 1 
ORDER BY 2 DESC
LIMIT 1; 

--Compare the number of titles added to Netflix before the pandemic and after (Use 2020 as the year pandemic began)
SELECT  
	   CASE WHEN CAST(RIGHT(DATE_ADDED, 4) AS INT) <= 2019 THEN 'PRE_PANDEMIC' ELSE 'POST_PANDEMIC' END as PERIOD, 
	   COUNT(*) AS NUM_OF_TITLES_ADDED, MAX(CAST(RIGHT(DATE_ADDED, 4) AS INT)) - MIN(CAST(RIGHT(DATE_ADDED, 4) AS INT)) AS YEAR_RANGE,
	   (COUNT(*)/(MAX(CAST(RIGHT(DATE_ADDED, 4) AS INT)) - MIN(CAST(RIGHT(DATE_ADDED, 4) AS INT)))) AS TITLES_PER_YEAR
FROM NETFLIX_
GROUP BY PERIOD; 
	
--Analyze trends by finding the year with the highest number of new titles added and the genres that dominated that year

SELECT 
    CAST(RIGHT(DATE_ADDED, 4) AS INT) AS YEAR_WITH_MOST_NEW_TITLES, 
    TRIM(UNNEST(STRING_TO_ARRAY(LISTED_IN, ','))) AS GENRES, 
    COUNT(*) AS GENRE_COUNT
FROM 
    NETFLIX_
WHERE 
    CAST(RIGHT(DATE_ADDED, 4) AS INT) IN (
        SELECT 
            CAST(RIGHT(DATE_ADDED, 4) AS INT) 
        FROM 
            NETFLIX_
        GROUP BY 
            CAST(RIGHT(DATE_ADDED, 4) AS INT)
        ORDER BY 
            COUNT(*) DESC 
        LIMIT 1
    )
GROUP BY 
    1, 2
ORDER BY 
    3 DESC
LIMIT 3;

--Create a rolling count of content added, showing cumulative totals by year from 2014 to 2024.
SELECT 
    CAST(RIGHT(DATE_ADDED, 4) AS INT) AS YEAR_ADDED, 
    COUNT(*) AS CONTENT_ADDED_THIS_YEAR,
    SUM(COUNT(*)) OVER (
        ORDER BY CAST(RIGHT(DATE_ADDED, 4) AS INT) 
    ) AS CUMULATIVE_TOTAL
FROM NETFLIX_
WHERE  CAST(RIGHT(DATE_ADDED, 4) AS INT) >= 2014 and  CAST(RIGHT(DATE_ADDED, 4) AS INT) <= 2024
GROUP BY CAST(RIGHT(DATE_ADDED, 4) AS INT)
ORDER BY YEAR_ADDED;
	
--Find the first and most recent content added for each country.
SELECT DISTINCT 
    COUNTRY, 
    FIRST_CONTENT_ADDED,
	DATE_ADDED_FIRST,
    LAST_CONTENT_ADDED,
	DATE_ADDED_LAST
FROM (
	SELECT COUNTRY, 
	       FIRST_VALUE(TITLE) OVER (
	           PARTITION BY COUNTRY 
	           ORDER BY DATE_ADDED_PARSED 
	           ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING
	       ) AS FIRST_CONTENT_ADDED,
	       FIRST_VALUE(DATE_ADDED_PARSED) OVER (
	           PARTITION BY COUNTRY 
	           ORDER BY DATE_ADDED_PARSED 
	           ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING
	       ) AS DATE_ADDED_FIRST,
	       LAST_VALUE(TITLE) OVER (
	           PARTITION BY COUNTRY 
	           ORDER BY DATE_ADDED_PARSED 
	           ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING
	       ) AS LAST_CONTENT_ADDED,
		   LAST_VALUE(DATE_ADDED_PARSED) OVER (
	           PARTITION BY COUNTRY 
	           ORDER BY DATE_ADDED_PARSED 
	           ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING
	       ) AS DATE_ADDED_LAST
	FROM (
	    SELECT 
	        TRIM(UNNEST(STRING_TO_ARRAY(COUNTRY, ','))) AS COUNTRY, 
	        TITLE,
	        TO_DATE(DATE_ADDED, 'MONTH DD, YYYY') AS DATE_ADDED_PARSED
	    FROM NETFLIX_
	) subquery
	WHERE COUNTRY IS NOT NULL
	)
WHERE COUNTRY IS NOT NULL
ORDER BY COUNTRY;

--Calculate the percentage of total content contributed by each country.
SELECT COUNTRY, TOTAL_CONTENT_FROM_COUNTRY, TOTAL_CONTENT, ROUND((TOTAL_CONTENT_FROM_COUNTRY/TOTAL_CONTENT)*100, 3) AS PCT_CONTRIBUTED
FROM (
	SELECT COUNTRY, 
		   TOTAL_CONTENT_FROM_COUNTRY, 
		   SUM(TOTAL_CONTENT_FROM_COUNTRY) OVER (RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS TOTAL_CONTENT
	FROM (
		SELECT 
			TRIM(UNNEST(STRING_TO_ARRAY(COUNTRY, ','))) AS COUNTRY, COUNT(*) AS TOTAL_CONTENT_FROM_COUNTRY
		FROM NETFLIX_
		GROUP BY 1
		)
)
ORDER BY PCT_CONTRIBUTED DESC;
